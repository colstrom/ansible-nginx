# {{ ansible_managed }}

##
# Core Configuration
#   Documentation: http://nginx.org/en/docs/ngx_core_module.html
##

user {{ nginx_user }};
worker_processes {{ nginx_worker_processes }};
pid {{ nginx_pidfile_path }};
{% if nginx_performance_tuning_enabled %}
pcre_jit on; # Enables “just-in-time compilation” for the regular expressions known by the time of configuration parsing.
{% endif %}

events {
  worker_connections {{ nginx_worker_connections }};
{% if nginx_performance_tuning_enabled %}
  multi_accept on; # Allow worker processes to accept more than one new connection at a time.
{% endif %}
}

http {
  ##
  # HTTP Core Configuration
  #   Documentation: http://nginx.org/en/docs/http/ngx_http_core_module.html
  ##

{% if nginx_performance_tuning_enabled %}
  sendfile on;              # Enables the use of sendfile() (kernel-based copy) vs read() and write() (userspace copy).
  tcp_nopush on;            # Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
                            # instead of using partial frames. This is useful for prepending headers before calling sendfile,
                            # or for throughput optimization.
  tcp_nodelay on;           # don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
  keepalive_timeout 30;     # Sets a timeout during which a keep-alive client connection will stay open on the server side.
  keepalive_requests 100;   # Sets the maximum number of requests that can be served through one keep-alive connection.
{% endif %}

{% if nginx_file_descriptor_caching_enabled %}
  # Caches information about open file descriptors for freqently accessed files.
  open_file_cache max=1000 inactive=20s; # Cache information about last 1000 accessed files, drop from cache if not accessed in 20sec.
  open_file_cache_valid 30s;             # Sets a time after which open_file_cache elements should be validated.
  open_file_cache_min_uses 2;            # Sets the minimum number of accesses during the inactive parameter of open_file_cache required to remain in the cache.

  {% if nginx_attack_mitigation_enabled %}
  open_file_cache_errors on;             # Enables caching of file lookup errors by open_file_cache.
  {% endif %}
{% endif %}

{% if nginx_attack_mitigation_enabled %}
  reset_timedout_connection on; # allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
  client_body_timeout 10;       # send the client a "request timed out" if the body is not loaded by this time.
  send_timeout 2;               # If the client stops reading data, free up the stale client connection after this much time.
{% endif %}

{% if nginx_hide_version %}
  server_tokens off;            # Disables emitting nginx version in error messages and in the “Server” response header field.
{% endif %}

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # Logging Configuration
  #   Documentation: http://nginx.org/en/docs/http/ngx_http_log_module.html
  ##

  log_format extended '$remote_addr - $remote_user [$time_iso8601] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '| $request_time $pipe $connection_requests $gzip_ratio $ssl_protocol/$ssl_cipher';

{% if nginx_access_log_enabled %}
  access_log {{ nginx_access_log_path }} {{ nginx_access_log_format }};
{% else %}
  access_log off;
{% endif %}

{% if nginx_error_log_enabled %}
  error_log {{ nginx_error_log_path }}{% if nginx_error_log_critical_only %}crit{% endif %};
{% endif %}

{% if nginx_gzip_enabled %}
  ##
  # Gzip Settings
  #   Documentation: http://nginx.org/en/docs/http/ngx_http_gzip_module.html
  ##

  gzip on;
  gzip_vary on;                                        # Enables inserting the “Vary: Accept-Encoding” response header field.
  gzip_proxied expired no-cache no-store private auth; # Enables gzipping of responses for proxied requests depending on the request and response.
  gzip_comp_level 9;                                   # Sets a gzip compression level of a response.

  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
{% endif %}

{% if nginx_naxsi_enabled %}
  include /etc/nginx/naxsi_core.rules;
{% endif %}

{% if nginx_passenger_enabled %}
  passenger_root /usr;
  passenger_ruby /usr/bin/ruby;
{% endif %}

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
}
